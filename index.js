const { Telegraf } = require('telegraf')
require('datejs')
require('dotenv').config()
const { menu_btn, period_btn, transactions, spent_item, earned_item } = require('./keyboards')
const { add_record, get_records, get_records_filter, deleteDB } = require('./db')

const bot = new Telegraf(process.env.TOKEN)

const choose_menu = {}  //-------–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é
const choose_period = {}  //-------–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
const choose_number = {}  //-------–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—É–º–º—ã
const choose_transactions = {}  //-------–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π

/* ---–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–µ–¥–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤--- */
function getResult(response) {
    let resultOutput  = ''
    let sumEarned = 0
    let sumSpent = 0
    if(response.length !== 0) {
        for(const result of response) {
            //–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—â—É—é —Å—É–º–º—É –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –∫–∞–∂–¥—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
            (result.operation===1)?sumEarned+=Number(result.amount):sumSpent+=Number(result.amount)
            resultOutput+= ((result.operation===1)?'+':'-') + ' ' + result.amount + ' ' + result.value + ' ' + result.date + '\n'
        }
        if(sumEarned!==0 && sumSpent!==0) {
            //–ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª –≤—ã–≤–æ–¥ –æ–±—â–µ–π –∏—Å—Ç–æ—Ä–∏–π
            resultOutput+=`----------------\n–û–±—â–µ–µ –ø–æ –¥–æ—Ö–æ–¥–∞–º: ${sumEarned} \n`
            resultOutput+=`----------------\n–û–±—â–µ–µ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º: ${sumSpent}`
        } else if (sumEarned!==0) {
            //–ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª –≤—ã–≤–æ–¥ –ø–æ –¥–æ—Ö–æ–¥–∞–º
            resultOutput+=`----------------\n–û–±—â–µ–µ –ø–æ –¥–æ—Ö–æ–¥–∞–º: ${sumEarned}`
        } else if (sumSpent!==0) {
            //–ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª –≤—ã–≤–æ–¥ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º
            resultOutput+=`----------------\n–û–±—â–µ–µ –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º: ${sumSpent}`
        }
        return resultOutput //–í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ —Å—É–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–æ—Ö–æ–¥–æ–º/—Ä–∞—Å—Ö–æ–¥–æ–º
    } else {
        return 'ü§∑‚Äç‚ôÇÔ∏è'
    }
}

const start = async () => {
    try {
        const date = new Date().toString('yyyy-MM-dd HH:mm:ss')
        /* ---–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π--- */
        bot.command('deleteDB', async msg => {
            try {
                console.log('delete correct')
                let response = await deleteDB()
                await msg.replyWithHTML(response)
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–π –∑–∞–ø–∏—Å–µ–π —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })

        /* ---–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞--- */
        bot.start(async msg => {
            try {
                const userId = msg.chat.id
                //–±–æ—Ç –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —é–∑–µ—Ä–æ–≤
                if (userId === 400336335 || userId === 257689171) {
                    await msg.reply(`—Ö–∞–π ${msg.chat.first_name}`, menu_btn)
                } else {
                    await msg.reply(`ü´µ ${msg.chat.first_name} ‚ùå –≤ –±–∞–∑–µ`)
                    await msg.reply(`üñï`)
                    await msg.reply(`–æ–π`)
                    await msg.reply(`ü´∞`)
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })
        /*-------------------*/

        /* ---–õ–æ–≥–∏–∫–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é--- */
        bot.hears(['ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª','üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª', 'üßê –ò—Å—Ç–æ—Ä–∏—è', 'üôÖ‚Äç‚ôÇÔ∏è–û—Ç–º–µ–Ω–∞'], async msg => {
            try {
                const userId = msg.message.chat.id
                if(msg.update.message.text === 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª' || msg.update.message.text === 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª') {
                    choose_menu[userId] = (msg.update.message.text === 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª') ? 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª' : 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª'
                    await msg.replyWithHTML('üí∞ –°–∫–æ–ª—å–∫–æ? üí∞')
                } else if(msg.update.message.text === 'üßê –ò—Å—Ç–æ—Ä–∏—è') {
                    choose_menu[userId] = 'üßê –ò—Å—Ç–æ—Ä–∏—è'
                    await msg.reply('üëÄ', period_btn)
                } else if(msg.update.message.text === 'üôÖ‚Äç‚ôÇÔ∏è–û—Ç–º–µ–Ω–∞') {
                    await msg.reply('üëå')
                    delete choose_menu[userId]
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })
        /*-------------------*/

        /* ---–í–Ω–µ—Å–µ–Ω–∏–µ —Å—É–º–º—ã –¥–æ—Ö–æ–¥–∞/—Ä–∞—Å—Ö–æ–¥–∞--- */
        bot.on('text', async msg => {
            try {
                const userId = msg.chat.id
                //—É–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã, –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
                choose_number[userId] = msg.update.message.text.split(' ').join('').replace(/[^0-9]/g, "")
                switch (choose_menu[userId]) {
                    case 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª':
                        if(choose_number[userId].length === 0) {
                            await msg.replyWithHTML('–¶–∏—Ñ—Ä—ã –≥–¥–µ üòí\n\n–í–≤–µ–¥–∏ —Å—É–º–º—É')
                        } else {
                            await msg.replyWithHTML(`–û—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏ ü§ë`, earned_item)
                        }
                        break
                    case 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª':
                        if(choose_number[userId].length === 0) {
                            await msg.replyWithHTML('–¶–∏—Ñ—Ä—ã –≥–¥–µ üòí\n\n–í–≤–µ–¥–∏ —Å—É–º–º—É')
                        } else {
                            await msg.replyWithHTML(`–ö—É–¥–∞ –ø–æ—Ç—Ä–∞—Ç–∏–ª üíµ`, spent_item)
                        }
                        break
                    case 'üßê –ò—Å—Ç–æ—Ä–∏—è':
                        await msg.replyWithHTML('üëÜ')
                        delete choose_menu[userId]
                        break
                    default:
                        await msg.reply('–í—ã–±–µ—Ä–∏ –∏–∑ üëá –º–µ–Ω—é')
                        break
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })
        /*-------------------*/

        /* ---–õ–æ–≥–∏–∫–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫--- */
        bot.on("callback_query", async msg => {
            try {
                const userId = msg.update.callback_query.from.id   // ID —é–∑–µ—Ä–∞
                const choose_btn = msg.update.callback_query.data   // –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
                const message_id = msg.update.callback_query.message.message_id //–¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–∞—Ç–æ–π –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
                let response //–æ—Ç–≤–µ—Ç –æ—Ç –ë–î
                switch (choose_btn) {
                    case 'day': case 'month': case 'year': case 'allDate':
                        choose_period[userId] = choose_btn
                        await msg.editMessageText(`üëÄ`, message_id)
                        await msg.reply('üëá', transactions)
                        break
                    case 'allTransaction':
                        await msg.editMessageText(`üëÄ`, message_id)
                        response = await get_records(userId, choose_period[userId])
                        let resultOutput = getResult(response)
                        await msg.replyWithHTML(resultOutput)
                        delete choose_period[userId]
                        break
                    case 'earned':
                        choose_transactions[userId] = choose_btn
                        await msg.editMessageText(`üëÄ`, message_id)
                        await msg.reply('üëá', earned_item)
                        delete choose_period[userId]
                        break
                    case 'spent':
                        choose_transactions[userId] = choose_btn
                        await msg.editMessageText(`üëÄ`, message_id)
                        await msg.reply('üëá', spent_item)
                        delete choose_period[userId] //???
                        break
                    case '–≤—Å–µ':
                        if(choose_menu[userId] === 'üßê –ò—Å—Ç–æ—Ä–∏—è') {
                            await msg.editMessageText(`üëÄ`, message_id)
                            if(choose_transactions[userId] !== 'earned') {
                                response = await get_records_filter(userId, choose_period[userId], '-' )
                                delete choose_transactions[userId]
                            } else {
                                response = await get_records_filter(userId, choose_period[userId], '+' )
                                delete choose_transactions[userId]
                            }
                            let resultOutput = getResult(response)
                            await msg.replyWithHTML(resultOutput)
                            delete choose_period[userId]
                        } else {
                            await msg.editMessageText('–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é', message_id)
                        }
                        break
                    case '–∑–ø': case '–ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞': case '–ø–æ–¥–∞—Ä–∏–ª–∏': case '–Ω–∞—à–µ–ª':
                        if(choose_menu[userId] === 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª') {
                            response = await add_record(userId, '+', choose_number[userId], choose_btn, date)
                            await msg.editMessageText(`–∑–∞–ø–∏—Å–∞–ª –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${choose_number[userId]} —Ç–≥ –≤ –∫–æ–ª–æ–Ω–∫—É ${choose_btn}`, msg.update.callback_query.message.message_id)
                            await msg.replyWithHTML(response)
                            delete choose_menu[userId]
                        } else {
                            await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                            response = await get_records_filter(userId, choose_period[userId], '+', choose_btn)
                            let resultOutput = getResult(response)
                            await msg.replyWithHTML(resultOutput)
                            delete choose_period[userId]
                        }
                        break
                    case '–∫–≤–∞—Ä—Ç–∏—Ä–∞': case '–∫–æ–º—ã': case '–∏–Ω—Ç–µ—Ä–Ω–µ—Ç': case '–ø—Ä–æ–¥—É–∫—Ç—ã': case '–∫—Ä–µ–¥–∏—Ç': case '—Å–∞–ª–æ–Ω':
                    case '—Ç–∞–∫—Å–∏': case '—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ': case '–º—ã–ª–æ–º–æ–π–∫–∞': case '–∑–¥–æ—Ä–æ–≤—å–µ': case '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ':
                    case '–ø–æ–¥–∞—Ä–∫–∏': case '–æ–¥–µ–∂–¥–∞': case '–æ–±—É–≤—å': case '–ø—Ä–æ—á–µ–µ': case '–ø–æ–µ–ª':
                        if(choose_menu[userId] === 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª') {
                            response = await add_record(userId, '-', choose_number[userId], choose_btn, date)
                            await msg.editMessageText(`–∑–∞–ø–∏—Å–∞–ª –Ω–∞ —Ç—Ä–∞—Ç—ã: ${choose_number[userId]} —Ç–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏—è ${choose_btn}`, msg.update.callback_query.message.message_id)
                            await msg.replyWithHTML(response)
                            delete choose_menu[userId]
                        } else {
                            await msg.editMessageText(`–ò—Å—Ç–æ—Ä–∏—è –∑–∞ ${choose_btn}`, msg.update.callback_query.message.message_id)
                            response = await get_records_filter(userId, choose_period[userId], '-', choose_btn)
                            let resultOutput = getResult(response)
                            await msg.replyWithHTML(resultOutput)
                            delete choose_period[userId]
                        }
                        break
                    default:
                        await msg.reply('–í—ã–±–µ—Ä–∏ –∏–∑ üëá –º–µ–Ω—é')
                        break
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })
        /*-------------------*/

        bot.launch() //–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞

        process.once('SIGINT', () => bot.stop('SIGINT'));
        process.once('SIGTERM', () => bot.stop('SIGTERM'));

    } catch (err) {
        console.log('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
    }
}

start()