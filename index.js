const { Telegraf } = require('telegraf')
require('datejs')
const { menu_btn, period_btn, transactions, spent_item } = require('./keyboards')
const { add_record, get_records, get_records_filter } = require('./db')
const TOKEN = '5653248232:AAFpIF48--w_tOSMBXykkGsZgzAAQma-Dh8'

const bot = new Telegraf(TOKEN)

const choose_menu = {}
const choose_period = {}

function getResult(results) {
    let resultOutput  = ''
    if(results.length !== 0) {
        for(const result of results) {
            resultOutput+= ((result.operation===1)?'+':'-') + ' ' + result.amount + ' ' + result.value + ' ' + result.date + '\n'
        }
        return resultOutput
    } else {
        return 'ü§∑‚Äç‚ôÇÔ∏è'
    }
}

const start = async () => {
    try {
        const date = new Date().toString('yyyy-MM-dd HH:mm:ss')

        bot.start(async msg => {
            try {
                const chatId = msg.chat.id
                console.log(chatId)
                console.log(msg.chat.first_name)
                if (chatId === 400336335 || chatId === 447380766 || chatId === 306135758 || chatId === 1798437017 || chatId === 1188871472) {
                    await msg.reply(`—Ö–∞–π ${msg.chat.first_name}`, menu_btn)
                } else {
                    await msg.reply(`ü´µ ${msg.chat.first_name} ‚ùå –≤ –±–∞–∑–µ`)
                    await msg.reply(`üñï`)
                    await msg.reply(`–æ–π`)
                    await msg.reply(`ü´∞`)
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })

        bot.hears(['ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª','üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª', 'üßê –ò—Å—Ç–æ—Ä–∏—è', 'üôÖ‚Äç‚ôÇÔ∏è–û—Ç–º–µ–Ω–∞'], async msg => {
            try {
                const chatId = msg.message.chat.id
                if(msg.update.message.text === 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª') {
                    choose_menu[chatId] = 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª'
                    await msg.replyWithHTML('üëá –í —Ñ–æ—Ä–º–∞—Ç–µ: üëá \n<i>700000 –∑–ø|–ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞|–ø–æ–¥–∞—Ä–∏–ª–∏</i>')
                } else if(msg.update.message.text === 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª') {
                    choose_menu[chatId] = 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª'
                    await msg.replyWithHTML('<b>üëá –í —Ñ–æ—Ä–º–∞—Ç–µ: üëá</b> \n<i>70000 –ø—Ä–æ–¥—É–∫—Ç—ã</i>')
                    await msg.replyWithHTML('<b>–†–∞–∑—Ä–µ—à–µ–Ω–æ:</b> \n<i>–ö–≤–∞—Ä—Ç–∏—Ä–∞|–ö–æ–º—ã|–ò–Ω—Ç–µ—Ä–Ω–µ—Ç|–ü—Ä–æ–¥—É–∫—Ç—ã|–ö—Ä–µ–¥–∏—Ç|–°–∞–ª–æ–Ω|\n–¢–∞–∫—Å–∏|–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ|–ú—ã–ª–æ–º–æ–π–∫–∞|–ó–¥–æ—Ä–æ–≤—å–µ|–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ|\n–ü–æ–¥–∞—Ä–∫–∏|–û–¥–µ–∂–¥–∞|–û–±—É–≤—å|–ü—Ä–æ—á–µ–µ|–ü–æ–µ–ª</i>')
                } else if(msg.update.message.text === 'üßê –ò—Å—Ç–æ—Ä–∏—è') {
                    choose_menu[chatId] = 'üßê –ò—Å—Ç–æ—Ä–∏—è'
                    await msg.reply('üëÄ', period_btn)
                } else if(msg.update.message.text === 'üôÖ‚Äç‚ôÇÔ∏è–û—Ç–º–µ–Ω–∞') {
                    await msg.reply('–æ—Ç–º–µ–Ω–∏–ª')
                    delete choose_menu[chatId]
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })

        bot.on("callback_query", async msg => {
            try {
                const chatId = msg.update.callback_query.from.id
                const choose_btn = msg.update.callback_query.data
                let results
                if(choose_btn==='day' || choose_btn==='month' || choose_btn==='year' || choose_btn==='allDate') {
                    choose_period[chatId] = msg.update.callback_query.data
                    await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                    await msg.reply('üëá', transactions)
                } else if(choose_btn==='allTransaction') {
                    await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                    results = await get_records(chatId, choose_period[chatId])
                    let resultOutput = getResult(results)
                    await msg.replyWithHTML(resultOutput)
                    delete choose_period[chatId]
                } else if(choose_btn==='earned') {
                    await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                    results = await get_records_filter(chatId, choose_period[chatId], '+' )
                    let resultOutput = getResult(results)
                    await msg.replyWithHTML(resultOutput)
                    delete choose_period[chatId]
                } else if(choose_btn==='spent') {
                    await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                    await msg.reply('üëá', spent_item)
                } else if(choose_btn==='–≤—Å–µ') {
                    await msg.editMessageText(`üëÄ`, msg.update.callback_query.message.message_id)
                    results = await get_records_filter(chatId, choose_period[chatId], '-' )
                    let resultOutput = getResult(results)
                    await msg.replyWithHTML(resultOutput)
                    delete choose_period[chatId]
                } else if(choose_btn==='–∫–≤–∞—Ä—Ç–∏—Ä–∞' || choose_btn==='–∫–æ–º—ã' || choose_btn==='–∏–Ω—Ç–µ—Ä–Ω–µ—Ç' || choose_btn==='–ø—Ä–æ–¥—É–∫—Ç—ã' ||
                    choose_btn==='–∫—Ä–µ–¥–∏—Ç' || choose_btn==='—Å–∞–ª–æ–Ω' || choose_btn==='—Ç–∞–∫—Å–∏' || choose_btn==='—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ' ||
                    choose_btn==='–º—ã–ª–æ–º–æ–π–∫–∞' || choose_btn==='–∑–¥–æ—Ä–æ–≤—å–µ' || choose_btn==='–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' || choose_btn==='–ø–æ–¥–∞—Ä–∫–∏' ||
                    choose_btn==='–æ–¥–µ–∂–¥–∞' || choose_btn==='–æ–±—É–≤—å' || choose_btn==='–ø—Ä–æ—á–µ–µ' ) {
                    await msg.editMessageText(`–ò—Å—Ç–æ—Ä–∏—è –∑–∞ ${choose_btn}`, msg.update.callback_query.message.message_id)
                    results = await get_records_filter(chatId, choose_period[chatId], '-' , choose_btn)
                    let resultOutput = getResult(results)
                    await msg.replyWithHTML(resultOutput)
                    delete choose_period[chatId]
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })

        bot.on('text', async msg => {
            try {
                const chatId = msg.chat.id
                const textArr = msg.update.message.text.split(' ')
                const number = textArr[0]
                const text = textArr[1]
                let result
                if(choose_menu[chatId] === 'ü§ë –ó–∞—Ä–∞–±–æ—Ç–∞–ª') {
                    if(/[0-9]/.test(number) && /–∑–ø|–ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞|–ø–æ–¥–∞—Ä–∏–ª–∏/i.test(text)) {
                        result = await add_record(chatId, '+', number, text.toLowerCase(), date)
                        await msg.replyWithHTML(`–∑–∞–ø–∏—Å–∞–ª –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${number} —Ç–≥ –≤ –∫–æ–ª–æ–Ω–∫—É ${text}`)
                        await msg.replyWithHTML(result)
                        delete choose_menu[chatId]
                    } else {
                        await msg.reply('–ü—Ä–∏–Ω–∏–º–∞—é –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –∏ —Ç–æ–ª—å–∫–æ "–∑–ø|–ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞|–ø–æ–¥–∞—Ä–∏–ª–∏"')
                        delete choose_menu[chatId]
                    }
                } else if(choose_menu[chatId] === 'üò¢ –ü–æ—Ç—Ä–∞—Ç–∏–ª') {
                    if(/[0-9]/.test(number) && /–ö–≤–∞—Ä—Ç–∏—Ä–∞|–ö–æ–º—ã|–ò–Ω—Ç–µ—Ä–Ω–µ—Ç|–ü—Ä–æ–¥—É–∫—Ç—ã|–ö—Ä–µ–¥–∏—Ç|–°–∞–ª–æ–Ω|–¢–∞–∫—Å–∏|–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ|–ú—ã–ª–æ–º–æ–π–∫–∞|–ó–¥–æ—Ä–æ–≤—å–µ|–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ|–ü–æ–¥–∞—Ä–∫–∏|–û–¥–µ–∂–¥–∞|–û–±—É–≤—å|–ü—Ä–æ—á–µ–µ|–ü–æ–µ–ª/i.test(text)) {
                        result = await add_record(chatId, '-', number, text.toLowerCase(), date)
                        await msg.replyWithHTML(`–∑–∞–ø–∏—Å–∞–ª –Ω–∞ —Ç—Ä–∞—Ç—ã: ${number} —Ç–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏—è ${text}`)
                        await msg.replyWithHTML(result)
                        delete choose_menu[chatId]
                    } else {
                        await msg.replyWithHTML('–ü—Ä–∏–Ω–∏–º–∞—é –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ –∏ —Ç–æ–ª—å–∫–æ "–ö–≤–∞—Ä—Ç–∏—Ä–∞|–ö–æ–º—ã|–ò–Ω—Ç–µ—Ä–Ω–µ—Ç|–ü—Ä–æ–¥—É–∫—Ç—ã|–ö—Ä–µ–¥–∏—Ç|–°–∞–ª–æ–Ω|–¢–∞–∫—Å–∏|\n–†–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ|–ú—ã–ª–æ–º–æ–π–∫–∞|–ó–¥–æ—Ä–æ–≤—å–µ|–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ|–ü–æ–¥–∞—Ä–∫–∏|–û–¥–µ–∂–¥–∞|–û–±—É–≤—å|–ü—Ä–æ—á–µ–µ|–ü–æ–µ–ª"')
                        delete choose_menu[chatId]
                    }
                } else if(choose_menu[chatId] === 'üßê –ò—Å—Ç–æ—Ä–∏—è') {
                    await msg.replyWithHTML('üëÜ')
                    delete choose_menu[chatId]
                } else {
                    await msg.reply('–í—ã–±–µ—Ä–∏ –∏–∑ üëá –º–µ–Ω—é')
                }
            } catch (err) {
                await msg.reply('üòµ', err)
                console.log('–ü—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞, —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
            }
        })
        bot.launch()
    } catch (err) {
        console.log('–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫', err)
    }
}

start()